[
    {
        "id": "30bfffe14836de0f",
        "type": "tab",
        "label": "Flujo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3c32cf9f885b3815",
        "type": "tab",
        "label": "Flujo 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "13b7d650bf779565",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6fc5ca55e78a0a84",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "13b7d650bf779565",
        "order": 1,
        "disp": false,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2860c9df3bc14fd2",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "13b7d650bf779565",
        "order": 2,
        "disp": false,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d649c9bfc5a38812",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9792cacabb6ea8a4",
        "type": "gauth",
        "name": "node-red-sheets@ninth-optics-458601-r5.iam.gserviceaccount.com"
    },
    {
        "id": "f9217116a51feb2e",
        "type": "gauth",
        "name": "node-red-sheets@ninth-optics-458601-r5.iam.gserviceaccount.com"
    },
    {
        "id": "7c54979535cd1fda",
        "type": "gauth",
        "name": "node-red-sheets@ninth-optics-458601-r5.iam.gserviceaccount.com"
    },
    {
        "id": "11ddd173db60c776",
        "type": "ui_tab",
        "name": "Tab 2",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "484a932f282fa153",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "11ddd173db60c776",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "5e8d33565b1f7a49",
        "type": "ui_spacer",
        "z": "30bfffe14836de0f",
        "name": "spacer",
        "group": "6fc5ca55e78a0a84",
        "order": 2,
        "width": 8,
        "height": 1
    },
    {
        "id": "18b2189986c7d58e",
        "type": "ui_spacer",
        "z": "30bfffe14836de0f",
        "name": "spacer",
        "group": "6fc5ca55e78a0a84",
        "order": 3,
        "width": 8,
        "height": 1
    },
    {
        "id": "74a8d5bdab068bb6",
        "type": "inject",
        "z": "30bfffe14836de0f",
        "name": "DESCARGAR",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "8411e4c891ed177d"
            ]
        ]
    },
    {
        "id": "da67b0e70f777c1a",
        "type": "ui_template",
        "z": "30bfffe14836de0f",
        "group": "6fc5ca55e78a0a84",
        "name": "MENU",
        "order": 1,
        "width": 8,
        "height": 2,
        "format": "<!-- Node-RED Dashboard Template Node: Menú Desplegable -->\n<style>\n  .menu-container {\n    position: relative;\n    text-align: center;\n    margin-top: 20px;\n    display: inline-block;\n  }\n  .menu-button {\n    padding: 8px 12px;\n    font-size: 14px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    background-color: #f9f9f9;\n    cursor: pointer;\n  }\n  .menu-list {\n    list-style: none;\n    padding: 0;\n    margin: 4px 0 0;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    background-color: #f9f9f9;\n    position: absolute;\n    width: 100%;\n    box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n    z-index: 1000;\n  }\n  .menu-item {\n    padding: 8px 12px;\n    cursor: pointer;\n  }\n  .menu-item:hover {\n    background-color: #e6e6e6;\n  }\n  .menu-item a {\n    text-decoration: none;\n    color: inherit;\n    display: block;\n    width: 100%;\n  }\n</style>\n\n<div class=\"menu-container\" ng-init=\"visible=false\">\n  <!-- Botón para mostrar/ocultar -->\n  <button class=\"menu-button\" ng-click=\"visible = !visible\">Menu</button>\n\n  <!-- Opciones desplegables -->\n  <ul class=\"menu-list\" ng-show=\"visible\">\n    <li class=\"menu-item\">\n      <a href=\"/download\" target=\"_blank\">Descargar Reporte</a>\n    </li>\n    <li class=\"menu-item\">\n      <a href=\"/logout\">Cerrar Sesión</a>\n    </li>\n  </ul>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 430,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "33e4d5e26b0ea206",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 7",
        "func": "// Guarda el archivo Excel en la variable de contexto \nflow.set(\"archivoExcel\", msg.payload); \nmsg.payload = \" \";\n//var enlace = \" \"; \n// Crea el enlace HTML de descarga \n/*msg.enlace = '<div style=\"text-align: center; margin-top: 20px;\">' + \n             '<a href=\"/download\" target=\"_blank\">Descargar Reporte </a>' +              \n             '</div>';*/ \nreturn null; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6a33ce06083b440a",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 8",
        "func": "var dataArray = msg.payload; // Ej: [ [\"Encabezado1\", \"Encabezado2\"], [\"Dato1\", \"Dato2\"], ... ] \nvar headers = dataArray[0]; \nvar dataObjects = []; \n// Recorrer el array empezando desde la segunda fila \nfor (var i = 1; i < dataArray.length; i++) {     \n          var row = dataArray[i];     \n          var obj = {};     \n          for (var j = 0; j < headers.length; j++){         \n            obj[headers[j]] = row[j]; \n          }     \n          dataObjects.push(obj); \n} \nmsg.payload = dataObjects; \nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 80,
        "wires": [
            [
                "3ec5b3220afae997"
            ]
        ]
    },
    {
        "id": "3ec5b3220afae997",
        "type": "xlsx-out",
        "z": "30bfffe14836de0f",
        "name": "",
        "sheetName": "",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "33e4d5e26b0ea206"
            ]
        ]
    },
    {
        "id": "23bd4b6af81b7207",
        "type": "http in",
        "z": "30bfffe14836de0f",
        "name": "DOWNLOAD XLSX",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "b4aa11862d755621"
            ]
        ]
    },
    {
        "id": "b4aa11862d755621",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 10",
        "func": "// Recupera el archivo Excel almacenado en la variable de contexto \nvar archivo = flow.get(\"archivoExcel\"); \nflow.set(\"archivoExcel\", null);  \n// Verificar si el archivo existe \nif (!archivo) { \n    // Si no se encontró, se devuelve un error     \n    msg.statusCode = 404;     \n    msg.payload = \"El archivo Excel no está disponible o no se ha generado.\";     \n    return msg; \n}  \n// Establecer las cabeceras HTTP para que el navegador lo trate como un archivo descargable en formato Excel \nmsg.headers = { \n    \"Content-Type\": \"application/vnd.openxmlformatsofficedocument.spreadsheetml.sheet\", \n    \"Content-Disposition\": 'attachment; filename=\"reporte.xlsx\"' \n};  \n// Colocar en msg.payload el contenido binario del archivo Excel \nmsg.payload = archivo; \nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 220,
        "wires": [
            [
                "776dbb7d54fc8326"
            ]
        ]
    },
    {
        "id": "776dbb7d54fc8326",
        "type": "http response",
        "z": "30bfffe14836de0f",
        "name": "download",
        "statusCode": "",
        "headers": {},
        "x": 480,
        "y": 220,
        "wires": []
    },
    {
        "id": "e24b42ecf91cc75f",
        "type": "inject",
        "z": "30bfffe14836de0f",
        "name": "ESCRIBIR",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[$moment().format('YYYY-MM-DD'), $round($random()*100, 2), $round($random()*100, 2), $round($random()*100, 2), $round($random()*100, 2)]",
        "payloadType": "jsonata",
        "x": 100,
        "y": 660,
        "wires": [
            [
                "e7534f9ecc49c258"
            ]
        ]
    },
    {
        "id": "e7534f9ecc49c258",
        "type": "GSheet",
        "z": "30bfffe14836de0f",
        "creds": "f9217116a51feb2e",
        "method": "append",
        "action": "",
        "sheet": "1CGfI2dkxgYdfw37UlectzlLVmVtBW0EQ8MUh9ni5R6Q",
        "cells": "hoja1!A5",
        "flatten": false,
        "name": "GSheet-ESCRIBIR",
        "x": 290,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "62540a5099c8d36b",
        "type": "inject",
        "z": "30bfffe14836de0f",
        "name": "dato1",
        "props": [
            {
                "p": "topic",
                "v": "$round($random()*100, 2)",
                "vt": "jsonata"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 780,
        "wires": [
            [
                "f6733eada21bfe70"
            ]
        ]
    },
    {
        "id": "dcced9fbf933b75b",
        "type": "inject",
        "z": "30bfffe14836de0f",
        "name": "dato2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "$round($random()*100, 2)",
        "payloadType": "jsonata",
        "x": 90,
        "y": 840,
        "wires": [
            [
                "fd4552a50750bcbe"
            ]
        ]
    },
    {
        "id": "c32e681a76cf3d45",
        "type": "inject",
        "z": "30bfffe14836de0f",
        "name": "dato3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "$round($random()*100, 2)",
        "payloadType": "jsonata",
        "x": 90,
        "y": 900,
        "wires": [
            [
                "92bf6e3362acc412"
            ]
        ]
    },
    {
        "id": "e9087cd828bc8483",
        "type": "inject",
        "z": "30bfffe14836de0f",
        "name": "dato4",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "$round($random()*100, 2)",
        "payloadType": "jsonata",
        "x": 90,
        "y": 960,
        "wires": [
            [
                "26a335dff747a918"
            ]
        ]
    },
    {
        "id": "f6733eada21bfe70",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 1",
        "func": "// guardar el valor en contexto de flujo\nflow.set('temp', msg.topic);\nmsg.payload = msg.topic;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 780,
        "wires": [
            [
                "63db2af75a40515c"
            ]
        ]
    },
    {
        "id": "fd4552a50750bcbe",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 9",
        "func": "// guardar el valor en contexto de flujo\nflow.set('luz', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 840,
        "wires": [
            [
                "9dfe85bee29d5596"
            ]
        ]
    },
    {
        "id": "92bf6e3362acc412",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 11",
        "func": "// guardar el valor en contexto de flujo\nflow.set('hum_suelo', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 900,
        "wires": [
            [
                "e5e524232045f503"
            ]
        ]
    },
    {
        "id": "26a335dff747a918",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 12",
        "func": "// guardar el valor en contexto de flujo\nflow.set('hum_ambiente', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 960,
        "wires": [
            [
                "e7a45bd7690a2d8b"
            ]
        ]
    },
    {
        "id": "e5e524232045f503",
        "type": "ui_gauge",
        "z": "30bfffe14836de0f",
        "name": "dato3",
        "group": "2860c9df3bc14fd2",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "HUM_SUELO",
        "label": "units",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 410,
        "y": 900,
        "wires": []
    },
    {
        "id": "e7a45bd7690a2d8b",
        "type": "ui_gauge",
        "z": "30bfffe14836de0f",
        "name": "dato4",
        "group": "2860c9df3bc14fd2",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "HUM_AMBIENTE",
        "label": "units",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 410,
        "y": 960,
        "wires": []
    },
    {
        "id": "5c190e65348f47a9",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 2",
        "func": "// Obtener últimos valores\nconst fecha = new Date().toLocaleDateString('en-CA', { timeZone: 'America/La_Paz'}); // YYYY-MM-DD\nconst t  = flow.get('temp')        || 0;\nconst l  = flow.get('luz')         || 0;\nconst hs = flow.get('hum_suelo')   || 0;\nconst ha = flow.get('hum_ambiente')|| 0;\n// Montar el array para Google Sheets\nmsg.payload = [ fecha, t, l, hs, ha ];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1080,
        "wires": [
            [
                "c3f645121877dab0"
            ]
        ]
    },
    {
        "id": "c3f645121877dab0",
        "type": "GSheet",
        "z": "30bfffe14836de0f",
        "creds": "7c54979535cd1fda",
        "method": "append",
        "action": "",
        "sheet": "1CGfI2dkxgYdfw37UlectzlLVmVtBW0EQ8MUh9ni5R6Q",
        "cells": "hoja1!A5",
        "flatten": false,
        "name": "GSheet-TRIGGER",
        "x": 450,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "049ff4136c046af2",
        "type": "inject",
        "z": "30bfffe14836de0f",
        "name": "TRIGGER",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1080,
        "wires": [
            [
                "5c190e65348f47a9"
            ]
        ]
    },
    {
        "id": "9dfe85bee29d5596",
        "type": "ui_artlessgauge2",
        "z": "30bfffe14836de0f",
        "group": "2860c9df3bc14fd2",
        "order": 2,
        "width": 4,
        "height": 4,
        "name": "date2",
        "icon": "thermometer",
        "label": "LUZ",
        "unit": "LUX",
        "layout": "radial",
        "decimals": "2",
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "2,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": true,
        "animate": true,
        "log2": false,
        "sectors": [
            {
                "val": 0,
                "col": "#00ccff",
                "t": "min",
                "dot": 0
            },
            {
                "val": 5,
                "col": "#ff6666",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#ff6666",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 390,
        "y": 840,
        "wires": []
    },
    {
        "id": "032f92b901f52676",
        "type": "ui_template",
        "z": "30bfffe14836de0f",
        "group": "",
        "name": "cargar FontAwesome",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 120,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "63db2af75a40515c",
        "type": "ui_template",
        "z": "30bfffe14836de0f",
        "group": "2860c9df3bc14fd2",
        "name": "dato1",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<div class=\"custom-gauge\">\n  <!-- Fila superior: etiqueta + icono -->\n  <div class=\"label-icon\">\n    <span class=\"label\">TEMPERATURA</span>\n    <i class=\"fa fa-thermometer-half icon\"></i>\n  </div>\n  <!-- Valores centrados -->\n  <div class=\"value-unit\">\n    <span class=\"value\">{{msg.payload | number:2}}</span>\n    <span class=\"unit\">°C</span>\n  </div>\n</div>\n\n<style>\n/* Contenedor principal */\n.custom-gauge {\n  width: 192px;\n  height: 192px;\n  background: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.2);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 12px;\n  box-sizing: border-box;\n  font-family: \"Roboto\", sans-serif;\n}\n\n/* Fila de etiqueta + icono */\n.label-icon {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px; /* más separación verticalmente */\n}\n.label {\n  font-size: 18px;       /* un poco más grande */\n  font-weight: 600;\n  color: #333333;\n}\n.icon {\n  font-size: 45px;       /* más grande verticalmente */\n  color: #e53935;\n  line-height: 1;\n}\n\n/* Fila del valor y unidad */\n.value-unit {\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  flex-grow: 1;\n}\n.value {\n  font-size: 48px;\n  font-weight: 600;\n  color: #212121;\n  line-height: 1;\n}\n.unit {\n  font-size: 48px;       /* igual al valor numérico */\n  font-weight: 600;\n  color: #757575;\n  margin-left: 4px;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "8411e4c891ed177d",
        "type": "GSheet",
        "z": "30bfffe14836de0f",
        "creds": "9792cacabb6ea8a4",
        "method": "get",
        "action": "",
        "sheet": "1CGfI2dkxgYdfw37UlectzlLVmVtBW0EQ8MUh9ni5R6Q",
        "cells": "hoja1!A1:Z1000",
        "flatten": false,
        "name": "GSH-LEER",
        "x": 310,
        "y": 80,
        "wires": [
            [
                "6a33ce06083b440a"
            ]
        ]
    },
    {
        "id": "ffe2b43397f510b2",
        "type": "http in",
        "z": "30bfffe14836de0f",
        "name": "LOGIN",
        "url": "/validador",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 340,
        "wires": [
            [
                "bfaaceadabca0c6e"
            ]
        ]
    },
    {
        "id": "bfaaceadabca0c6e",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "Decodificar y extraer",
        "func": "// msg.req.query.token viene de GET /validador?token=...\nvar token = msg.req.query.token;\n\n// 1) Si falta el token: 401\nif (!token) {\n    msg.statusCode = 401;\n    msg.payload    = \"Token faltante\";\n    return msg;\n}\n\n// 2) Decodifica Base64 a UTF-8: \"usuario|timestamp|firma\"\ntry {\n    msg.decoded = Buffer.from(token, \"base64\").toString(\"utf8\");\n} catch (e) {\n    msg.statusCode = 400;\n    msg.payload    = \"Token inválido (Base64)\";\n    return msg;\n}\n\n// 3) Separa en 3: usuario | timestamp | firma\nvar parts = msg.decoded.split(\"|\");\nif (parts.length !== 3) {\n    msg.statusCode = 400;\n    msg.payload    = \"Formato de token incorrecto\";\n    return msg;\n}\n\nmsg.username  = parts[0];   // p.ej. 'juan'\nmsg.ts_string = parts[1];   // p.ej. '1623000000'\n//msg.sig       = parts[2];   // hex HMAC-SHA256\nflow.set(\"sig\", parts[2]); \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 340,
        "wires": [
            [
                "e91048a4cbeebc79"
            ]
        ]
    },
    {
        "id": "e91048a4cbeebc79",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "Prepara para HMAC",
        "func": "// Reconstruye el payload que firmó el PHP:\nmsg.payload = msg.username+\"|\"+msg.ts_string;\n\n// Define tu secreto compartido (16–24 carácteres):\n// Línea en tu Function que define el secreto:\n// Debe coincidir carácter por carácter con el string de PHP,\n// pero en JS las barras invertidas se escapan con otra barra invertida.\n//msg.secret = \"7uhI2B1mQJf)KoH(3q3AmInMvn9z;+1=\";\n\n// Dejamos msg.sig para comparar luego:\n// msg.sig = firma que vino en el token\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 340,
        "wires": [
            [
                "8beceab8f9990f77"
            ]
        ]
    },
    {
        "id": "8beceab8f9990f77",
        "type": "hmac",
        "z": "30bfffe14836de0f",
        "name": "HMAC-SHA256",
        "algorithm": "HmacSHA256",
        "key": "7uhI2B1mQJf)KoH(3q3AmInMvn9z;+1=",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "17f1e3d441219857"
            ]
        ]
    },
    {
        "id": "17f1e3d441219857",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "Compara firma y expiración",
        "func": "// 1) Compara la firma calculada con la del token\nvar sign = flow.get(\"sig\"); \nif (sign !== msg.payload) {\n    msg.statusCode = 401;\n    msg.payload = \"Firma inválida\";\n    return msg;\n}\n\n// 2) Comprueba expiración (1 hora = 3600 s)\nvar ts = parseInt(msg.ts_string, 10);\nvar now = Math.floor(Date.now() / 1000);\nif (now - ts > 3600) {\n    msg.statusCode = 401;\n    msg.payload = \"Token expirado\";\n    return msg;\n}\n\n// 3) Si todo OK, preparamos la cookie y redirect:\nmsg.headers = {\n  // Quitamos HttpOnly para que el script en <head> pueda leerla\n  \"Set-Cookie\": \"auth=1; Path=/; SameSite=Lax\"\n};\n// Redirige al dashboard completo (incl. #! y socketid)\nmsg.statusCode = 302;\nmsg.headers[\"Location\"] = \"https://node-red-bh0b.onrender.com/ui/#!/0?socketid=NKUKX8V5cUyfuiTHAAAB\";\nmsg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 420,
        "wires": [
            [
                "d79410c172c2b443"
            ]
        ]
    },
    {
        "id": "d79410c172c2b443",
        "type": "http response",
        "z": "30bfffe14836de0f",
        "name": "dashbo",
        "statusCode": "",
        "headers": {},
        "x": 600,
        "y": 420,
        "wires": []
    },
    {
        "id": "afb33c17fa01f1e9",
        "type": "http in",
        "z": "30bfffe14836de0f",
        "name": "LOGOUT",
        "url": "/logout",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 540,
        "wires": [
            [
                "405b522e5126e381"
            ]
        ]
    },
    {
        "id": "405b522e5126e381",
        "type": "function",
        "z": "30bfffe14836de0f",
        "name": "function 6",
        "func": "// 1) Preparamos la cookie para borrarla: \n//    - Asignamos valor vacío y expiración pasada.\n//    - Path=/ para que afecte a toda la ruta.\nmsg.headers = {\n  // Igual, sin HttpOnly\n  \"Set-Cookie\": \"auth=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=Lax\"\n};\n\n// 2) Redirigimos al usuario de vuelta al login PHP en InfinityFree\nmsg.statusCode = 302;\nmsg.headers[\"Location\"] = \"https://siot.kesug.com/cerrar_sesion.php\";\n\n// 3) Vacíamos el cuerpo de la respuesta (solo interesan cabeceras)\nmsg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 540,
        "wires": [
            [
                "ecaabebbdae859c8"
            ]
        ]
    },
    {
        "id": "ecaabebbdae859c8",
        "type": "http response",
        "z": "30bfffe14836de0f",
        "name": "logout",
        "statusCode": "",
        "headers": {},
        "x": 390,
        "y": 540,
        "wires": []
    },
    {
        "id": "b83deb375cd1fa6e",
        "type": "ui_template",
        "z": "30bfffe14836de0f",
        "group": "",
        "name": "Bloqueo URL",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function(){\n  // 1) Solo actuamos si la ruta está en /ui\n  if (!window.location.pathname.startsWith(\"/ui\")) {\n    return; // no hacemos nada en /validador ni /logout ni otras rutas\n  }\n\n  // 2) Leemos la cookie 'auth'\n  var cookies = document.cookie.split(\";\").map(c => c.trim());\n  var auth = cookies.find(c => c.indexOf(\"auth=\") === 0);\n\n  // 3) Si no existe auth=1, redirigimos al login PHP\n  if (!auth || auth.split(\"=\")[1] !== \"1\") {\n    window.top.location.href = \"https://siot.kesug.com/cerrar_sesion.php\";\n  }\n})();\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 330,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "0c12eb0275573479",
        "type": "comment",
        "z": "30bfffe14836de0f",
        "name": "DESCARGA DESDE EL MENU EL ARCHIVO \"reporte.xlsx\" DE GOOGLE SHEETS",
        "info": "",
        "x": 310,
        "y": 20,
        "wires": []
    },
    {
        "id": "4d12960a1b3e2233",
        "type": "comment",
        "z": "30bfffe14836de0f",
        "name": "FLUJO PARA ACCEDER AL DASHBOARD CUANDO EL USUARIO INICIA SESION",
        "info": "",
        "x": 310,
        "y": 280,
        "wires": []
    },
    {
        "id": "3316df79b95001db",
        "type": "comment",
        "z": "30bfffe14836de0f",
        "name": "FLUJO QUE CIERRA SESION DESDE EL MENU",
        "info": "",
        "x": 200,
        "y": 480,
        "wires": []
    },
    {
        "id": "95c2123b4aacbcdc",
        "type": "comment",
        "z": "30bfffe14836de0f",
        "name": "FLUJO DE PRUEBA PARA ESCRIBIR MANUALMENTE DATOS EN EL ARCHIVO \"reporte.xlsx\"",
        "info": "",
        "x": 350,
        "y": 600,
        "wires": []
    },
    {
        "id": "bd7067cbb5cc9c60",
        "type": "comment",
        "z": "30bfffe14836de0f",
        "name": "SIMULA DATOS DE SENSORES  Y LOS MUESTRA EN WIDGETS DEL DASHBOARD",
        "info": "",
        "x": 320,
        "y": 720,
        "wires": []
    },
    {
        "id": "87141044b16e21ee",
        "type": "comment",
        "z": "30bfffe14836de0f",
        "name": "CADA CIERTO TIEMPO SE GUARDAN LOS DATOS EN EL ARCHIVO \"reporte.xlsx\"",
        "info": "",
        "x": 310,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1c97df7f36d5f322",
        "type": "ui_template",
        "z": "3c32cf9f885b3815",
        "group": "484a932f282fa153",
        "name": "",
        "order": 1,
        "width": 6,
        "height": 2,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 80,
        "wires": [
            []
        ]
    }
]